#! /bin/sh
### BEGIN INIT INFO
# Provides:          skeleton
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Example initscript
# Description:       This file should be used to construct scripts to be
#                    placed in /etc/init.d.
### END INIT INFO

do_sync()
{

  URL=$1
  cd $2

  if test -f version; then
    VERSION=$(cat version)
  else
    VERSION=0
    touch version
    echo "0" > version
  fi

  VERSION_neu="$(wget -O - ${URL}/version 2>/dev/null)"

  if test -n "$VERSION_neu"; then 
 
    if test "$VERSION"  = "$VERSION_neu"; then
      echo "nothing to do"
    else
      echo "copy $(printf "%06i.img" $VERSION) to $(printf "%06i.img" $VERSION_neu)..."
      cp $(printf "%06i.img" $VERSION) $(printf "%06i.img" $VERSION_neu) 
      echo "zsync..." 
      if zsync "${URL}/$(printf "%06i.img" $VERSION_neu).zsync"; then
        # sync meta info
        rm *-image-*
        wget ${URL}/cur-image-$(printf "%06i" $VERSION_neu)
        rm version
        wget ${URL}/version
        echo "done"

        #remove old images
        echo "remove oldies"
        if test -f $(printf "%06i.img" $(( $VERSION -3 ))); then
          rm $(printf "%06i.img*" $(( $VERSION -3 )))
        fi
        if test -f *.zs-old; then 
          rm *.zs-old 
        fi
        #change permissions for nbd-server
        chmod a+r *.img

        echo "ok"
      fi #zsync
    fi # version neu
  fi 
}


do_daemon()
{
  #sleep $(( $RANDOM / 20 ))
  while true; do
    do_sync http://hadar.amxa.ch/boot-images/ /mnt/boot-images/ 
    sleep 1800
    #do_sync http://172.16.42.10/ltsp-images/ /mnt/images/ 
    sleep 1800
  done
}

#
# Function that starts the daemon/service
#
do_start()
{
  if ! test -d /mnt/boot-images; then mkdir /mnt/boot-images;fi
  
  if mount -L server /mnt/boot-images; then

    # start sync-daemon in background
    if ! test -f /var/run/sync-daemon.pid; then
      $0 daemon &
      echo $! > /var/run/sync-daemon.pid
    fi

  fi
} 

  # try to mount partition with images
#  PARTS="sdc1 sdb1 sda1 vda1"
#  CURRENT=""
#  umount /mnt
#  for P in $PARTS; do
#      if ! test -z "$CURRENT"; then continue; fi
#      echo -n "trying: /dev/$P ..."
#      if mount /dev/$P /mnt/; then
#        if test -d /mnt/boot; then
#           CURRENT=$P
#           echo "ok"
#        else
#           umount /mnt/
#           echo "no"
#        fi
#      fi
#  done

  # exit if none found
#  if test -z "$CURRENT"; then 
#     echo "error: no disk"
#     exit 1 
#  fi
 
  #prepare local nbd
#  if ! test -d /opt/ltsp/images/; then 
#         mkdir -p /opt/ltsp/images/ 
#  fi

#  BOOT=$(cat /proc/cmdline|cut -d\  -f6|cut -d= -f2)     
#  if test -h /opt/ltsp/images/i386.img; then 
#         rm /opt/ltsp/images/i386.img
#  fi
#  ln -s /mnt/${BOOT} /opt/ltsp/images/i386.img

  # realy needed?
#  service nbd-server restart


  # prepare tftp

#  if ! test -d /var/lib/tftboot/ltsp/i386/; then
#    mkdir -p /var/lib/tftpboot/ltsp/i386;
#  fi  
#  if ! test -d /mnt/volume; then mkdir /mnt/volume; fi

#  if mount -t squashfs /mnt/${BOOT} /mnt/volume; then
#    rsync -r /mnt/volume/var/lib/tftpboot/ltsp/i386/ /var/lib/tftpboot/ltsp/i386/    
#    umount /mnt/volume/
#    service tftp-hpa reload
#  fi


#}

#
# Function that stops the daemon/service
#
do_stop()
{
   if test -f /var/run/sync-daemon.pid; then
     kill $(cat /var/run/sync-daemon.pid)
     rm /var/run/sync-daemon.pid
  
     umount /mnt
   fi
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() 
{
 do_stop
 do_start
}



# main

  #if ! cat /proc/cmdline | grep -q "loop"; then exit; fi

  case "$1" in
    daemon)
        do_daemon
        ;;
    start)
        do_start
	;;
    stop)
        do_stop
	;;
    restart|reload)
        do_reload
	;;
    *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|restart|reload}" >&2
	exit 3
	;;
  esac

  exit 

